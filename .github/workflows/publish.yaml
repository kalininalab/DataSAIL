name: Publish DataSAIL

on:
  release:
    types: [published]
  workflow_dispatch:
    
jobs:
  publish:
    strategy:
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        datasail-versions:
          - 'full'
          - 'lite'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v4

    - name: Setup Mamba
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: MPP
        use-mamba: true

    - name: Install environment
      shell: bash -l {0}
      run: |
        conda install -y anaconda-client conda-build git

    - name: Build DataSAIL(-lite) for linux-64
      shell: bash -l {0}
      run: |
        folder=$(if [ ${{ matrix.datasail-version }} = 'full' ]; then echo 'recipe'; else echo 'recipe_lite'; fi)
        conda-build -q -c conda-forge -c bioconda --output-folder . --no-test --append-file base_recipe.yaml $folder

    - name: Convert DataSAIL to other platforms
      shell: bash -l {0}
      run: |
        conda convert -p osx-64 linux-64/*.tar.bz2
        if [ ${{ matrix.datasail-versions }} = 'lite' ]; then
          conda convert -p osx-arm64 linux-64/*.tar.bz2
          conda convert -p win-64 linux-64/*.tar.bz2
        fi

    - name: Publish to Conda
      env:
        ANACONDA_TOKEN: ${{ secrets.DATASAIL_ANACONDA_TOKEN }}
      shell: bash -l {0}
      run: |
        anaconda -t "$ANACONDA_TOKEN" upload linux-64/*.tar.bz2
        anaconda -t "$ANACONDA_TOKEN" upload osx-64/*.tar.bz2
        if [ ${{ matrix.datasail-versions }} = 'lite' ]; then
          anaconda -t "$ANACONDA_TOKEN" upload osx-arm64/*.tar.bz2
          anaconda -t "$ANACONDA_TOKEN" upload win-64/*.tar.bz2
        fi
